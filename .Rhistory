selected_sp = colnames(meanlat)[sp+1]
#extract
meanlat_select=meanlat_lag1[,sp]
temp_select=temp_lag1[,sp]
for (nSp in 1:2){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
blockE[1,nSp] <- which(bestrho == max(bestrho))
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
meanlat = read.csv(file = "coastal_meanlat.csv",header = TRUE)
meanlat_lag1=scale(meanlat[2:52,2:30]-meanlat[1:51,2:30])
temperature = read.csv(file="coastal_climate.csv",header=FALSE)
temp_lag1=scale(temperature[2:52,1:29]-meanlat[1:51,1:29])
meanlat_SSR = read.csv(file="meanlat_SSR.csv")
selected = (meanlat_SSR$outE >1 & meanlat_SSR$out_rho >0 & meanlat_SSR$out_theta >0) == TRUE
sp = c(2,4,5,7,10,21)
selected_sp = colnames(meanlat)[sp+1]
#extract
meanlat_select=meanlat_lag1[,sp]
temp_select=temp_lag1[,sp]
for (nSp in 1:2){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
blockE[nSp] <- which(bestrho == max(bestrho))
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
View(X_xmap_Y_means)
View(Y_xmap_X_means)
for (nSp in 1){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
blockE[nSp] <- which(bestrho == max(bestrho))
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
for (nSp in 2){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
blockE[nSp] <- which(bestrho == max(bestrho))
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
for (nSp in 3){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
blockE[nSp] <- which(bestrho == max(bestrho))
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
for (nSp in 1:6){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
blockE[nSp] = which(bestrho == max(bestrho))
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
test$rho
test$mae
?which
#extract
meanlat_select=meanlat_lag1[,sp]
temp_select=temp_lag1[,sp]
for (nSp in 1:6){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
bestE = which(bestrho == max(bestrho))
blockE[nSp] = bestE
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
for (nSp in 1:6){
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
bestE = which(bestrho == max(bestrho))
blockE[nSp] = min(bestE)
}
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
for (nSp in 1:6) {
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
bestE = which(bestrho == max(bestrho))
blockE[nSp] = min(bestE)
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=1000,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
}
?polygon
View(X_xmap_Y)
size=X_xmap_Y$lib_size
repmat(size,100,60)
repmat(size,100,6000)
repmat(size,100,6)
repmat(size,100)
repmat(size,60,100)
size(6000*0.05)
size[6000*0.05]
View(X_xmap_Y_means)
for (nSp in 1:6) {
target=as.matrix(meanlat_select[,nSp])
choice=as.matrix(temp_select[,nSp])
repmat = function(X,m,n) {
##R equivalent of repmat (matlab)
mx = dim(X)[1]
nx = dim(X)[2]
matrix(t(matrix(X,mx,nx*n)),mx*m,nx*n,byrow=T)
}
E=1:5
choice_all=repmat(choice,1,5)
for (nE in 2:(max(E))) {
choice_all[(NROW(choice)-nE+2):NROW(choice),nE] <- NA
}
block=cbind(target,choice_all)
bestrho=vector(mode="numeric")
bestmae=vector(mode="numeric")
blockE=vector(mode="numeric")
for (nE in 1:max(E)) {
test <-  block_lnlp(block, lib = c(1,51), pred = c(1,51),
norm_type = "L2 norm", method = "simplex",
tp = -1, num_neighbors = "nE+1", columns = c(2:(nE+1)), target_column = 1,
stats_only = TRUE, first_column_time = FALSE, exclusion_radius = NULL,
epsilon = 100000, theta = NULL, silent = FALSE,
save_smap_coefficients = FALSE)
bestrho[nE] = test$rho
bestmae[nE] = test$mae
}
bestE = which(bestrho == max(bestrho))
blockE[nSp] = min(bestE)
block <- cbind(target,choice)
X_xmap_Y <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=100,replace=TRUE,
lib_column=1,target_column=2,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
Y_xmap_X <- ccm(block,lib=c(1, NROW(target)),pred=c(1, NROW(target)),norm_type="L2 norm",E=blockE[nSp],tau=1,tp=0,
num_neighbors="e+1",lib_sizes=seq(10, 25, blockE[nSp]),random_libs=TRUE,num_samples=100,replace=TRUE,
lib_column=2,target_column=1,first_column_time=FALSE,exclusion_radius=NULL,epsilon=NULL,silent=FALSE)
X_xmap_Y_means <- ccm_means(X_xmap_Y)
Y_xmap_X_means <- ccm_means(Y_xmap_X)
#3. plot result
plot(X_xmap_Y_means$lib_size, X_xmap_Y_means$rho, type = "l", col = "royalblue", lwd = 2,
xlim = c(min(X_xmap_Y_means$lib_size), max(X_xmap_Y_means$lib_size)), ylim = c(0, 0.5), xlab = "L", ylab = expression(rho))
lines(Y_xmap_X_means$lib_size, Y_xmap_X_means$rho, col = "red3", lwd = 2)
legend(min(X_xmap_Y_means$lib_size), 0.5, legend = c("MeanLAT x Temperature", "Temperature x MeanLAT"),
bty="n",xjust = 0, yjust = 1, lty = 1, lwd = 2, col = c("royalblue", "red3"))
dev.copy(png,filename=paste("meanlatXtemp_",selected_sp[nSp],".png"))
dev.off()
}
View(Y_xmap_X)
View(X_xmap_Y)
XmapY <- c(X_xmap_Y$lib_size,X_xmap_Y$rho)
XmapY <- c(X_xmap_Y$lib_size;X_xmap_Y$rho)
